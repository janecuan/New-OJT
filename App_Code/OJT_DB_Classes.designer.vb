'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="OJT")>  _
Partial Public Class OJT_DB_ClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblADMINISTRATOR(instance As tblADMINISTRATOR)
    End Sub
  Partial Private Sub UpdatetblADMINISTRATOR(instance As tblADMINISTRATOR)
    End Sub
  Partial Private Sub DeletetblADMINISTRATOR(instance As tblADMINISTRATOR)
    End Sub
  Partial Private Sub InserttblEMPLOYEE_QUALIFICATION(instance As tblEMPLOYEE_QUALIFICATION)
    End Sub
  Partial Private Sub UpdatetblEMPLOYEE_QUALIFICATION(instance As tblEMPLOYEE_QUALIFICATION)
    End Sub
  Partial Private Sub DeletetblEMPLOYEE_QUALIFICATION(instance As tblEMPLOYEE_QUALIFICATION)
    End Sub
  Partial Private Sub InserttblEMPLOYEES_QUALIFIED(instance As tblEMPLOYEES_QUALIFIED)
    End Sub
  Partial Private Sub UpdatetblEMPLOYEES_QUALIFIED(instance As tblEMPLOYEES_QUALIFIED)
    End Sub
  Partial Private Sub DeletetblEMPLOYEES_QUALIFIED(instance As tblEMPLOYEES_QUALIFIED)
    End Sub
  Partial Private Sub InserttblJOB_MACHINE_MASTER(instance As tblJOB_MACHINE_MASTER)
    End Sub
  Partial Private Sub UpdatetblJOB_MACHINE_MASTER(instance As tblJOB_MACHINE_MASTER)
    End Sub
  Partial Private Sub DeletetblJOB_MACHINE_MASTER(instance As tblJOB_MACHINE_MASTER)
    End Sub
  Partial Private Sub InserttblJOB_TITLE_APPROVAL(instance As tblJOB_TITLE_APPROVAL)
    End Sub
  Partial Private Sub UpdatetblJOB_TITLE_APPROVAL(instance As tblJOB_TITLE_APPROVAL)
    End Sub
  Partial Private Sub DeletetblJOB_TITLE_APPROVAL(instance As tblJOB_TITLE_APPROVAL)
    End Sub
  Partial Private Sub InserttblJOB_TITLE_MASTER(instance As tblJOB_TITLE_MASTER)
    End Sub
  Partial Private Sub UpdatetblJOB_TITLE_MASTER(instance As tblJOB_TITLE_MASTER)
    End Sub
  Partial Private Sub DeletetblJOB_TITLE_MASTER(instance As tblJOB_TITLE_MASTER)
    End Sub
  Partial Private Sub InserttblJOB_TITLE(instance As tblJOB_TITLE)
    End Sub
  Partial Private Sub UpdatetblJOB_TITLE(instance As tblJOB_TITLE)
    End Sub
  Partial Private Sub DeletetblJOB_TITLE(instance As tblJOB_TITLE)
    End Sub
  Partial Private Sub InserttblMACHINE(instance As tblMACHINE)
    End Sub
  Partial Private Sub UpdatetblMACHINE(instance As tblMACHINE)
    End Sub
  Partial Private Sub DeletetblMACHINE(instance As tblMACHINE)
    End Sub
  Partial Private Sub InserttblMASTER_JOB_TITLE(instance As tblMASTER_JOB_TITLE)
    End Sub
  Partial Private Sub UpdatetblMASTER_JOB_TITLE(instance As tblMASTER_JOB_TITLE)
    End Sub
  Partial Private Sub DeletetblMASTER_JOB_TITLE(instance As tblMASTER_JOB_TITLE)
    End Sub
  Partial Private Sub InserttblOJT_CONTROL(instance As tblOJT_CONTROL)
    End Sub
  Partial Private Sub UpdatetblOJT_CONTROL(instance As tblOJT_CONTROL)
    End Sub
  Partial Private Sub DeletetblOJT_CONTROL(instance As tblOJT_CONTROL)
    End Sub
  Partial Private Sub InserttblTRAINING_CODE(instance As tblTRAINING_CODE)
    End Sub
  Partial Private Sub UpdatetblTRAINING_CODE(instance As tblTRAINING_CODE)
    End Sub
  Partial Private Sub DeletetblTRAINING_CODE(instance As tblTRAINING_CODE)
    End Sub
  Partial Private Sub InserttblTRAINER_QUALIFICATION(instance As tblTRAINER_QUALIFICATION)
    End Sub
  Partial Private Sub UpdatetblTRAINER_QUALIFICATION(instance As tblTRAINER_QUALIFICATION)
    End Sub
  Partial Private Sub DeletetblTRAINER_QUALIFICATION(instance As tblTRAINER_QUALIFICATION)
    End Sub
  Partial Private Sub InserttblEMPLOYEE(instance As tblEMPLOYEE)
    End Sub
  Partial Private Sub UpdatetblEMPLOYEE(instance As tblEMPLOYEE)
    End Sub
  Partial Private Sub DeletetblEMPLOYEE(instance As tblEMPLOYEE)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("OJTConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblADMINISTRATORs() As System.Data.Linq.Table(Of tblADMINISTRATOR)
		Get
			Return Me.GetTable(Of tblADMINISTRATOR)
		End Get
	End Property
	
	Public ReadOnly Property tblEMPLOYEE_QUALIFICATIONs() As System.Data.Linq.Table(Of tblEMPLOYEE_QUALIFICATION)
		Get
			Return Me.GetTable(Of tblEMPLOYEE_QUALIFICATION)
		End Get
	End Property
	
	Public ReadOnly Property tblEMPLOYEES_QUALIFIEDs() As System.Data.Linq.Table(Of tblEMPLOYEES_QUALIFIED)
		Get
			Return Me.GetTable(Of tblEMPLOYEES_QUALIFIED)
		End Get
	End Property
	
	Public ReadOnly Property tblJOB_MACHINE_MASTERs() As System.Data.Linq.Table(Of tblJOB_MACHINE_MASTER)
		Get
			Return Me.GetTable(Of tblJOB_MACHINE_MASTER)
		End Get
	End Property
	
	Public ReadOnly Property tblJOB_TITLE_APPROVALs() As System.Data.Linq.Table(Of tblJOB_TITLE_APPROVAL)
		Get
			Return Me.GetTable(Of tblJOB_TITLE_APPROVAL)
		End Get
	End Property
	
	Public ReadOnly Property tblJOB_TITLE_MASTERs() As System.Data.Linq.Table(Of tblJOB_TITLE_MASTER)
		Get
			Return Me.GetTable(Of tblJOB_TITLE_MASTER)
		End Get
	End Property
	
	Public ReadOnly Property tblJOB_TITLEs() As System.Data.Linq.Table(Of tblJOB_TITLE)
		Get
			Return Me.GetTable(Of tblJOB_TITLE)
		End Get
	End Property
	
	Public ReadOnly Property tblMACHINEs() As System.Data.Linq.Table(Of tblMACHINE)
		Get
			Return Me.GetTable(Of tblMACHINE)
		End Get
	End Property
	
	Public ReadOnly Property tblMASTER_JOB_TITLEs() As System.Data.Linq.Table(Of tblMASTER_JOB_TITLE)
		Get
			Return Me.GetTable(Of tblMASTER_JOB_TITLE)
		End Get
	End Property
	
	Public ReadOnly Property tblOJT_CONTROLs() As System.Data.Linq.Table(Of tblOJT_CONTROL)
		Get
			Return Me.GetTable(Of tblOJT_CONTROL)
		End Get
	End Property
	
	Public ReadOnly Property tblTRAINING_CODEs() As System.Data.Linq.Table(Of tblTRAINING_CODE)
		Get
			Return Me.GetTable(Of tblTRAINING_CODE)
		End Get
	End Property
	
	Public ReadOnly Property tblTRAINER_QUALIFICATIONs() As System.Data.Linq.Table(Of tblTRAINER_QUALIFICATION)
		Get
			Return Me.GetTable(Of tblTRAINER_QUALIFICATION)
		End Get
	End Property
	
	Public ReadOnly Property tblEMPLOYEEs() As System.Data.Linq.Table(Of tblEMPLOYEE)
		Get
			Return Me.GetTable(Of tblEMPLOYEE)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblADMINISTRATORS")>  _
Partial Public Class tblADMINISTRATOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LOGIN As String
	
	Private _FIRST_NAME As String
	
	Private _LAST_NAME As String
	
	Private _PASSWORD As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLOGINChanging(value As String)
    End Sub
    Partial Private Sub OnLOGINChanged()
    End Sub
    Partial Private Sub OnFIRST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFIRST_NAMEChanged()
    End Sub
    Partial Private Sub OnLAST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAST_NAMEChanged()
    End Sub
    Partial Private Sub OnPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnPASSWORDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOGIN", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property LOGIN() As String
		Get
			Return Me._LOGIN
		End Get
		Set
			If (String.Equals(Me._LOGIN, value) = false) Then
				Me.OnLOGINChanging(value)
				Me.SendPropertyChanging
				Me._LOGIN = value
				Me.SendPropertyChanged("LOGIN")
				Me.OnLOGINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_NAME", DbType:="VarChar(50)")>  _
	Public Property FIRST_NAME() As String
		Get
			Return Me._FIRST_NAME
		End Get
		Set
			If (String.Equals(Me._FIRST_NAME, value) = false) Then
				Me.OnFIRST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_NAME = value
				Me.SendPropertyChanged("FIRST_NAME")
				Me.OnFIRST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_NAME", DbType:="VarChar(50)")>  _
	Public Property LAST_NAME() As String
		Get
			Return Me._LAST_NAME
		End Get
		Set
			If (String.Equals(Me._LAST_NAME, value) = false) Then
				Me.OnLAST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_NAME = value
				Me.SendPropertyChanged("LAST_NAME")
				Me.OnLAST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PASSWORD", DbType:="VarChar(50)")>  _
	Public Property PASSWORD() As String
		Get
			Return Me._PASSWORD
		End Get
		Set
			If (String.Equals(Me._PASSWORD, value) = false) Then
				Me.OnPASSWORDChanging(value)
				Me.SendPropertyChanging
				Me._PASSWORD = value
				Me.SendPropertyChanged("PASSWORD")
				Me.OnPASSWORDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEMPLOYEE_QUALIFICATIONS")>  _
Partial Public Class tblEMPLOYEE_QUALIFICATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EMPLOYEE_ID As Integer
	
	Private _MASTER_JOB_NUMBER As Integer
	
	Private _JOB_TITLE_NUMBER As Integer
	
	Private _MACHINE_CODE As String
	
	Private _TRAINING_NUMBER As Integer
	
	Private _DATE_APPROVED As System.Nullable(Of Date)
	
	Private _APPROVED_BY As System.Nullable(Of Integer)
	
	Private _SUPERVISOR As System.Nullable(Of Integer)
	
	Private _SUPERVISOR_APPROVED As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanged()
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanged()
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnMACHINE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMACHINE_CODEChanged()
    End Sub
    Partial Private Sub OnTRAINING_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRAINING_NUMBERChanged()
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanged()
    End Sub
    Partial Private Sub OnAPPROVED_BYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAPPROVED_BYChanged()
    End Sub
    Partial Private Sub OnSUPERVISORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUPERVISORChanged()
    End Sub
    Partial Private Sub OnSUPERVISOR_APPROVEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSUPERVISOR_APPROVEDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMPLOYEE_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EMPLOYEE_ID() As Integer
		Get
			Return Me._EMPLOYEE_ID
		End Get
		Set
			If ((Me._EMPLOYEE_ID = value)  _
						= false) Then
				Me.OnEMPLOYEE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EMPLOYEE_ID = value
				Me.SendPropertyChanged("EMPLOYEE_ID")
				Me.OnEMPLOYEE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MASTER_JOB_NUMBER() As Integer
		Get
			Return Me._MASTER_JOB_NUMBER
		End Get
		Set
			If ((Me._MASTER_JOB_NUMBER = value)  _
						= false) Then
				Me.OnMASTER_JOB_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_NUMBER = value
				Me.SendPropertyChanged("MASTER_JOB_NUMBER")
				Me.OnMASTER_JOB_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JOB_TITLE_NUMBER() As Integer
		Get
			Return Me._JOB_TITLE_NUMBER
		End Get
		Set
			If ((Me._JOB_TITLE_NUMBER = value)  _
						= false) Then
				Me.OnJOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("JOB_TITLE_NUMBER")
				Me.OnJOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MACHINE_CODE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MACHINE_CODE() As String
		Get
			Return Me._MACHINE_CODE
		End Get
		Set
			If (String.Equals(Me._MACHINE_CODE, value) = false) Then
				Me.OnMACHINE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MACHINE_CODE = value
				Me.SendPropertyChanged("MACHINE_CODE")
				Me.OnMACHINE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRAINING_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property TRAINING_NUMBER() As Integer
		Get
			Return Me._TRAINING_NUMBER
		End Get
		Set
			If ((Me._TRAINING_NUMBER = value)  _
						= false) Then
				Me.OnTRAINING_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TRAINING_NUMBER = value
				Me.SendPropertyChanged("TRAINING_NUMBER")
				Me.OnTRAINING_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_APPROVED", DbType:="DateTime")>  _
	Public Property DATE_APPROVED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_APPROVED
		End Get
		Set
			If (Me._DATE_APPROVED.Equals(value) = false) Then
				Me.OnDATE_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_APPROVED = value
				Me.SendPropertyChanged("DATE_APPROVED")
				Me.OnDATE_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVED_BY", DbType:="Int")>  _
	Public Property APPROVED_BY() As System.Nullable(Of Integer)
		Get
			Return Me._APPROVED_BY
		End Get
		Set
			If (Me._APPROVED_BY.Equals(value) = false) Then
				Me.OnAPPROVED_BYChanging(value)
				Me.SendPropertyChanging
				Me._APPROVED_BY = value
				Me.SendPropertyChanged("APPROVED_BY")
				Me.OnAPPROVED_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPERVISOR", DbType:="Int")>  _
	Public Property SUPERVISOR() As System.Nullable(Of Integer)
		Get
			Return Me._SUPERVISOR
		End Get
		Set
			If (Me._SUPERVISOR.Equals(value) = false) Then
				Me.OnSUPERVISORChanging(value)
				Me.SendPropertyChanging
				Me._SUPERVISOR = value
				Me.SendPropertyChanged("SUPERVISOR")
				Me.OnSUPERVISORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPERVISOR_APPROVED", DbType:="DateTime")>  _
	Public Property SUPERVISOR_APPROVED() As System.Nullable(Of Date)
		Get
			Return Me._SUPERVISOR_APPROVED
		End Get
		Set
			If (Me._SUPERVISOR_APPROVED.Equals(value) = false) Then
				Me.OnSUPERVISOR_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._SUPERVISOR_APPROVED = value
				Me.SendPropertyChanged("SUPERVISOR_APPROVED")
				Me.OnSUPERVISOR_APPROVEDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEMPLOYEES_QUALIFIED")>  _
Partial Public Class tblEMPLOYEES_QUALIFIED
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EMPLOYEE_ID As Integer
	
	Private _MASTER_JOB_NUMBER As Integer
	
	Private _MACHINE_CODE As String
	
	Private _JOB_TITLE_NUMBER As Integer
	
	Private _APPROVED_BY As System.Nullable(Of Integer)
	
	Private _DATE_APPROVED As System.Nullable(Of Date)
	
	Private _SUPERVISOR As System.Nullable(Of Integer)
	
	Private _SUPERVISOR_APPROVED As System.Nullable(Of Date)
	
	Private _FORM_CHANGE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanged()
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanged()
    End Sub
    Partial Private Sub OnMACHINE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMACHINE_CODEChanged()
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnAPPROVED_BYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAPPROVED_BYChanged()
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_APPROVEDChanged()
    End Sub
    Partial Private Sub OnSUPERVISORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUPERVISORChanged()
    End Sub
    Partial Private Sub OnSUPERVISOR_APPROVEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSUPERVISOR_APPROVEDChanged()
    End Sub
    Partial Private Sub OnFORM_CHANGEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFORM_CHANGEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMPLOYEE_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EMPLOYEE_ID() As Integer
		Get
			Return Me._EMPLOYEE_ID
		End Get
		Set
			If ((Me._EMPLOYEE_ID = value)  _
						= false) Then
				Me.OnEMPLOYEE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EMPLOYEE_ID = value
				Me.SendPropertyChanged("EMPLOYEE_ID")
				Me.OnEMPLOYEE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MASTER_JOB_NUMBER() As Integer
		Get
			Return Me._MASTER_JOB_NUMBER
		End Get
		Set
			If ((Me._MASTER_JOB_NUMBER = value)  _
						= false) Then
				Me.OnMASTER_JOB_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_NUMBER = value
				Me.SendPropertyChanged("MASTER_JOB_NUMBER")
				Me.OnMASTER_JOB_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MACHINE_CODE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MACHINE_CODE() As String
		Get
			Return Me._MACHINE_CODE
		End Get
		Set
			If (String.Equals(Me._MACHINE_CODE, value) = false) Then
				Me.OnMACHINE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MACHINE_CODE = value
				Me.SendPropertyChanged("MACHINE_CODE")
				Me.OnMACHINE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JOB_TITLE_NUMBER() As Integer
		Get
			Return Me._JOB_TITLE_NUMBER
		End Get
		Set
			If ((Me._JOB_TITLE_NUMBER = value)  _
						= false) Then
				Me.OnJOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("JOB_TITLE_NUMBER")
				Me.OnJOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVED_BY", DbType:="Int")>  _
	Public Property APPROVED_BY() As System.Nullable(Of Integer)
		Get
			Return Me._APPROVED_BY
		End Get
		Set
			If (Me._APPROVED_BY.Equals(value) = false) Then
				Me.OnAPPROVED_BYChanging(value)
				Me.SendPropertyChanging
				Me._APPROVED_BY = value
				Me.SendPropertyChanged("APPROVED_BY")
				Me.OnAPPROVED_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_APPROVED", DbType:="DateTime")>  _
	Public Property DATE_APPROVED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_APPROVED
		End Get
		Set
			If (Me._DATE_APPROVED.Equals(value) = false) Then
				Me.OnDATE_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_APPROVED = value
				Me.SendPropertyChanged("DATE_APPROVED")
				Me.OnDATE_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPERVISOR", DbType:="Int")>  _
	Public Property SUPERVISOR() As System.Nullable(Of Integer)
		Get
			Return Me._SUPERVISOR
		End Get
		Set
			If (Me._SUPERVISOR.Equals(value) = false) Then
				Me.OnSUPERVISORChanging(value)
				Me.SendPropertyChanging
				Me._SUPERVISOR = value
				Me.SendPropertyChanged("SUPERVISOR")
				Me.OnSUPERVISORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPERVISOR_APPROVED", DbType:="DateTime")>  _
	Public Property SUPERVISOR_APPROVED() As System.Nullable(Of Date)
		Get
			Return Me._SUPERVISOR_APPROVED
		End Get
		Set
			If (Me._SUPERVISOR_APPROVED.Equals(value) = false) Then
				Me.OnSUPERVISOR_APPROVEDChanging(value)
				Me.SendPropertyChanging
				Me._SUPERVISOR_APPROVED = value
				Me.SendPropertyChanged("SUPERVISOR_APPROVED")
				Me.OnSUPERVISOR_APPROVEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORM_CHANGE", DbType:="Bit")>  _
	Public Property FORM_CHANGE() As System.Nullable(Of Boolean)
		Get
			Return Me._FORM_CHANGE
		End Get
		Set
			If (Me._FORM_CHANGE.Equals(value) = false) Then
				Me.OnFORM_CHANGEChanging(value)
				Me.SendPropertyChanging
				Me._FORM_CHANGE = value
				Me.SendPropertyChanged("FORM_CHANGE")
				Me.OnFORM_CHANGEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblJOB_MACHINE_MASTER")>  _
Partial Public Class tblJOB_MACHINE_MASTER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MASTER_JOB_NUMBER As Integer
	
	Private _JOB_TITLE_NUMBER As Integer
	
	Private _MACHINE_CODE As String
	
	Private _TRAINING_NUMBER As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanged()
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnMACHINE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMACHINE_CODEChanged()
    End Sub
    Partial Private Sub OnTRAINING_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRAINING_NUMBERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MASTER_JOB_NUMBER() As Integer
		Get
			Return Me._MASTER_JOB_NUMBER
		End Get
		Set
			If ((Me._MASTER_JOB_NUMBER = value)  _
						= false) Then
				Me.OnMASTER_JOB_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_NUMBER = value
				Me.SendPropertyChanged("MASTER_JOB_NUMBER")
				Me.OnMASTER_JOB_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JOB_TITLE_NUMBER() As Integer
		Get
			Return Me._JOB_TITLE_NUMBER
		End Get
		Set
			If ((Me._JOB_TITLE_NUMBER = value)  _
						= false) Then
				Me.OnJOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("JOB_TITLE_NUMBER")
				Me.OnJOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MACHINE_CODE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MACHINE_CODE() As String
		Get
			Return Me._MACHINE_CODE
		End Get
		Set
			If (String.Equals(Me._MACHINE_CODE, value) = false) Then
				Me.OnMACHINE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MACHINE_CODE = value
				Me.SendPropertyChanged("MACHINE_CODE")
				Me.OnMACHINE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRAINING_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property TRAINING_NUMBER() As Integer
		Get
			Return Me._TRAINING_NUMBER
		End Get
		Set
			If ((Me._TRAINING_NUMBER = value)  _
						= false) Then
				Me.OnTRAINING_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TRAINING_NUMBER = value
				Me.SendPropertyChanged("TRAINING_NUMBER")
				Me.OnTRAINING_NUMBERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblJOB_TITLE_APPROVALS")>  _
Partial Public Class tblJOB_TITLE_APPROVAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MASTER_JOB_NUMBER As Integer
	
	Private _MACHINE_CODE As String
	
	Private _JOB_TITLE_NUMBER As Integer
	
	Private _QCF_NUMBER As String
	
	Private _REVIEWED_BY As String
	
	Private _DATE_REVIEWED As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanged()
    End Sub
    Partial Private Sub OnMACHINE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMACHINE_CODEChanged()
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnQCF_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnQCF_NUMBERChanged()
    End Sub
    Partial Private Sub OnREVIEWED_BYChanging(value As String)
    End Sub
    Partial Private Sub OnREVIEWED_BYChanged()
    End Sub
    Partial Private Sub OnDATE_REVIEWEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_REVIEWEDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MASTER_JOB_NUMBER() As Integer
		Get
			Return Me._MASTER_JOB_NUMBER
		End Get
		Set
			If ((Me._MASTER_JOB_NUMBER = value)  _
						= false) Then
				Me.OnMASTER_JOB_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_NUMBER = value
				Me.SendPropertyChanged("MASTER_JOB_NUMBER")
				Me.OnMASTER_JOB_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MACHINE_CODE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MACHINE_CODE() As String
		Get
			Return Me._MACHINE_CODE
		End Get
		Set
			If (String.Equals(Me._MACHINE_CODE, value) = false) Then
				Me.OnMACHINE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MACHINE_CODE = value
				Me.SendPropertyChanged("MACHINE_CODE")
				Me.OnMACHINE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JOB_TITLE_NUMBER() As Integer
		Get
			Return Me._JOB_TITLE_NUMBER
		End Get
		Set
			If ((Me._JOB_TITLE_NUMBER = value)  _
						= false) Then
				Me.OnJOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("JOB_TITLE_NUMBER")
				Me.OnJOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QCF_NUMBER", DbType:="VarChar(50)")>  _
	Public Property QCF_NUMBER() As String
		Get
			Return Me._QCF_NUMBER
		End Get
		Set
			If (String.Equals(Me._QCF_NUMBER, value) = false) Then
				Me.OnQCF_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._QCF_NUMBER = value
				Me.SendPropertyChanged("QCF_NUMBER")
				Me.OnQCF_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REVIEWED_BY", DbType:="VarChar(50)")>  _
	Public Property REVIEWED_BY() As String
		Get
			Return Me._REVIEWED_BY
		End Get
		Set
			If (String.Equals(Me._REVIEWED_BY, value) = false) Then
				Me.OnREVIEWED_BYChanging(value)
				Me.SendPropertyChanging
				Me._REVIEWED_BY = value
				Me.SendPropertyChanged("REVIEWED_BY")
				Me.OnREVIEWED_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_REVIEWED", DbType:="DateTime")>  _
	Public Property DATE_REVIEWED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_REVIEWED
		End Get
		Set
			If (Me._DATE_REVIEWED.Equals(value) = false) Then
				Me.OnDATE_REVIEWEDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_REVIEWED = value
				Me.SendPropertyChanged("DATE_REVIEWED")
				Me.OnDATE_REVIEWEDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblJOB_TITLE_MASTER")>  _
Partial Public Class tblJOB_TITLE_MASTER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MASTER_JOB_NUMBER As Integer
	
	Private _JOB_TITLE_NUMBER As Integer
	
	Private _QCF_NUMBER As String
	
	Private _REVIEWED_BY As String
	
	Private _DATE_REVIEWED As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanged()
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnQCF_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnQCF_NUMBERChanged()
    End Sub
    Partial Private Sub OnREVIEWED_BYChanging(value As String)
    End Sub
    Partial Private Sub OnREVIEWED_BYChanged()
    End Sub
    Partial Private Sub OnDATE_REVIEWEDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_REVIEWEDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MASTER_JOB_NUMBER() As Integer
		Get
			Return Me._MASTER_JOB_NUMBER
		End Get
		Set
			If ((Me._MASTER_JOB_NUMBER = value)  _
						= false) Then
				Me.OnMASTER_JOB_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_NUMBER = value
				Me.SendPropertyChanged("MASTER_JOB_NUMBER")
				Me.OnMASTER_JOB_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JOB_TITLE_NUMBER() As Integer
		Get
			Return Me._JOB_TITLE_NUMBER
		End Get
		Set
			If ((Me._JOB_TITLE_NUMBER = value)  _
						= false) Then
				Me.OnJOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("JOB_TITLE_NUMBER")
				Me.OnJOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QCF_NUMBER", DbType:="VarChar(50)")>  _
	Public Property QCF_NUMBER() As String
		Get
			Return Me._QCF_NUMBER
		End Get
		Set
			If (String.Equals(Me._QCF_NUMBER, value) = false) Then
				Me.OnQCF_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._QCF_NUMBER = value
				Me.SendPropertyChanged("QCF_NUMBER")
				Me.OnQCF_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REVIEWED_BY", DbType:="VarChar(50)")>  _
	Public Property REVIEWED_BY() As String
		Get
			Return Me._REVIEWED_BY
		End Get
		Set
			If (String.Equals(Me._REVIEWED_BY, value) = false) Then
				Me.OnREVIEWED_BYChanging(value)
				Me.SendPropertyChanging
				Me._REVIEWED_BY = value
				Me.SendPropertyChanged("REVIEWED_BY")
				Me.OnREVIEWED_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_REVIEWED", DbType:="DateTime")>  _
	Public Property DATE_REVIEWED() As System.Nullable(Of Date)
		Get
			Return Me._DATE_REVIEWED
		End Get
		Set
			If (Me._DATE_REVIEWED.Equals(value) = false) Then
				Me.OnDATE_REVIEWEDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_REVIEWED = value
				Me.SendPropertyChanged("DATE_REVIEWED")
				Me.OnDATE_REVIEWEDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblJOB_TITLES")>  _
Partial Public Class tblJOB_TITLE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _JOB_TITLE_NUMBER As Integer
	
	Private _JOB_TITLE As String
	
	Private _JOB_TITLE_TYPE As String
	
	Private _QSF_NUMBER As String
	
	Private _REVISED_BY As String
	
	Private _REVISION_DATE As System.Nullable(Of Date)
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnJOB_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnJOB_TITLEChanged()
    End Sub
    Partial Private Sub OnJOB_TITLE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnJOB_TITLE_TYPEChanged()
    End Sub
    Partial Private Sub OnQSF_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnQSF_NUMBERChanged()
    End Sub
    Partial Private Sub OnREVISED_BYChanging(value As String)
    End Sub
    Partial Private Sub OnREVISED_BYChanged()
    End Sub
    Partial Private Sub OnREVISION_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREVISION_DATEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JOB_TITLE_NUMBER() As Integer
		Get
			Return Me._JOB_TITLE_NUMBER
		End Get
		Set
			If ((Me._JOB_TITLE_NUMBER = value)  _
						= false) Then
				Me.OnJOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("JOB_TITLE_NUMBER")
				Me.OnJOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE", DbType:="VarChar(200)")>  _
	Public Property JOB_TITLE() As String
		Get
			Return Me._JOB_TITLE
		End Get
		Set
			If (String.Equals(Me._JOB_TITLE, value) = false) Then
				Me.OnJOB_TITLEChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE = value
				Me.SendPropertyChanged("JOB_TITLE")
				Me.OnJOB_TITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_TYPE", DbType:="VarChar(50)")>  _
	Public Property JOB_TITLE_TYPE() As String
		Get
			Return Me._JOB_TITLE_TYPE
		End Get
		Set
			If (String.Equals(Me._JOB_TITLE_TYPE, value) = false) Then
				Me.OnJOB_TITLE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_TYPE = value
				Me.SendPropertyChanged("JOB_TITLE_TYPE")
				Me.OnJOB_TITLE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QSF_NUMBER", DbType:="VarChar(50)")>  _
	Public Property QSF_NUMBER() As String
		Get
			Return Me._QSF_NUMBER
		End Get
		Set
			If (String.Equals(Me._QSF_NUMBER, value) = false) Then
				Me.OnQSF_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._QSF_NUMBER = value
				Me.SendPropertyChanged("QSF_NUMBER")
				Me.OnQSF_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REVISED_BY", DbType:="VarChar(50)")>  _
	Public Property REVISED_BY() As String
		Get
			Return Me._REVISED_BY
		End Get
		Set
			If (String.Equals(Me._REVISED_BY, value) = false) Then
				Me.OnREVISED_BYChanging(value)
				Me.SendPropertyChanging
				Me._REVISED_BY = value
				Me.SendPropertyChanged("REVISED_BY")
				Me.OnREVISED_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REVISION_DATE", DbType:="DateTime")>  _
	Public Property REVISION_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REVISION_DATE
		End Get
		Set
			If (Me._REVISION_DATE.Equals(value) = false) Then
				Me.OnREVISION_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REVISION_DATE = value
				Me.SendPropertyChanged("REVISION_DATE")
				Me.OnREVISION_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMACHINES")>  _
Partial Public Class tblMACHINE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MACHINE_CODE As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMACHINE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMACHINE_CODEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MACHINE_CODE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MACHINE_CODE() As String
		Get
			Return Me._MACHINE_CODE
		End Get
		Set
			If (String.Equals(Me._MACHINE_CODE, value) = false) Then
				Me.OnMACHINE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MACHINE_CODE = value
				Me.SendPropertyChanged("MACHINE_CODE")
				Me.OnMACHINE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblMASTER_JOB_TITLES")>  _
Partial Public Class tblMASTER_JOB_TITLE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MASTER_JOB_NUMBER As Integer
	
	Private _MASTER_JOB_TITLE As String
	
	Private _DESCRIPTION As String
	
	Private _DOCUMENT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanged()
    End Sub
    Partial Private Sub OnMASTER_JOB_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnMASTER_JOB_TITLEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDOCUMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDOCUMENTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MASTER_JOB_NUMBER() As Integer
		Get
			Return Me._MASTER_JOB_NUMBER
		End Get
		Set
			If ((Me._MASTER_JOB_NUMBER = value)  _
						= false) Then
				Me.OnMASTER_JOB_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_NUMBER = value
				Me.SendPropertyChanged("MASTER_JOB_NUMBER")
				Me.OnMASTER_JOB_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_TITLE", DbType:="VarChar(50)")>  _
	Public Property MASTER_JOB_TITLE() As String
		Get
			Return Me._MASTER_JOB_TITLE
		End Get
		Set
			If (String.Equals(Me._MASTER_JOB_TITLE, value) = false) Then
				Me.OnMASTER_JOB_TITLEChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_TITLE = value
				Me.SendPropertyChanged("MASTER_JOB_TITLE")
				Me.OnMASTER_JOB_TITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DOCUMENT() As String
		Get
			Return Me._DOCUMENT
		End Get
		Set
			If (String.Equals(Me._DOCUMENT, value) = false) Then
				Me.OnDOCUMENTChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT = value
				Me.SendPropertyChanged("DOCUMENT")
				Me.OnDOCUMENTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblOJT_CONTROLS")>  _
Partial Public Class tblOJT_CONTROL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RECORD_ID As String
	
	Private _LAST_EMPLOYEE As System.Nullable(Of Integer)
	
	Private _LAST_CATEGORY As System.Nullable(Of Integer)
	
	Private _LAST_JOB_TITLE As System.Nullable(Of Integer)
	
	Private _LAST_TRAINING_NUMBER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRECORD_IDChanging(value As String)
    End Sub
    Partial Private Sub OnRECORD_IDChanged()
    End Sub
    Partial Private Sub OnLAST_EMPLOYEEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAST_EMPLOYEEChanged()
    End Sub
    Partial Private Sub OnLAST_CATEGORYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAST_CATEGORYChanged()
    End Sub
    Partial Private Sub OnLAST_JOB_TITLEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAST_JOB_TITLEChanged()
    End Sub
    Partial Private Sub OnLAST_TRAINING_NUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAST_TRAINING_NUMBERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECORD_ID", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property RECORD_ID() As String
		Get
			Return Me._RECORD_ID
		End Get
		Set
			If (String.Equals(Me._RECORD_ID, value) = false) Then
				Me.OnRECORD_IDChanging(value)
				Me.SendPropertyChanging
				Me._RECORD_ID = value
				Me.SendPropertyChanged("RECORD_ID")
				Me.OnRECORD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_EMPLOYEE", DbType:="Int")>  _
	Public Property LAST_EMPLOYEE() As System.Nullable(Of Integer)
		Get
			Return Me._LAST_EMPLOYEE
		End Get
		Set
			If (Me._LAST_EMPLOYEE.Equals(value) = false) Then
				Me.OnLAST_EMPLOYEEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_EMPLOYEE = value
				Me.SendPropertyChanged("LAST_EMPLOYEE")
				Me.OnLAST_EMPLOYEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_CATEGORY", DbType:="Int")>  _
	Public Property LAST_CATEGORY() As System.Nullable(Of Integer)
		Get
			Return Me._LAST_CATEGORY
		End Get
		Set
			If (Me._LAST_CATEGORY.Equals(value) = false) Then
				Me.OnLAST_CATEGORYChanging(value)
				Me.SendPropertyChanging
				Me._LAST_CATEGORY = value
				Me.SendPropertyChanged("LAST_CATEGORY")
				Me.OnLAST_CATEGORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_JOB_TITLE", DbType:="Int")>  _
	Public Property LAST_JOB_TITLE() As System.Nullable(Of Integer)
		Get
			Return Me._LAST_JOB_TITLE
		End Get
		Set
			If (Me._LAST_JOB_TITLE.Equals(value) = false) Then
				Me.OnLAST_JOB_TITLEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_JOB_TITLE = value
				Me.SendPropertyChanged("LAST_JOB_TITLE")
				Me.OnLAST_JOB_TITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_TRAINING_NUMBER", DbType:="Int")>  _
	Public Property LAST_TRAINING_NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._LAST_TRAINING_NUMBER
		End Get
		Set
			If (Me._LAST_TRAINING_NUMBER.Equals(value) = false) Then
				Me.OnLAST_TRAINING_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._LAST_TRAINING_NUMBER = value
				Me.SendPropertyChanged("LAST_TRAINING_NUMBER")
				Me.OnLAST_TRAINING_NUMBERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblTRAINING_CODES")>  _
Partial Public Class tblTRAINING_CODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TRAINING_NUMBER As Integer
	
	Private _TITLE As String
	
	Private _MACHINE_DEPENDENT As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTRAINING_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRAINING_NUMBERChanged()
    End Sub
    Partial Private Sub OnTITLEChanging(value As String)
    End Sub
    Partial Private Sub OnTITLEChanged()
    End Sub
    Partial Private Sub OnMACHINE_DEPENDENTChanging(value As String)
    End Sub
    Partial Private Sub OnMACHINE_DEPENDENTChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRAINING_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property TRAINING_NUMBER() As Integer
		Get
			Return Me._TRAINING_NUMBER
		End Get
		Set
			If ((Me._TRAINING_NUMBER = value)  _
						= false) Then
				Me.OnTRAINING_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TRAINING_NUMBER = value
				Me.SendPropertyChanged("TRAINING_NUMBER")
				Me.OnTRAINING_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITLE", DbType:="VarChar(200)")>  _
	Public Property TITLE() As String
		Get
			Return Me._TITLE
		End Get
		Set
			If (String.Equals(Me._TITLE, value) = false) Then
				Me.OnTITLEChanging(value)
				Me.SendPropertyChanging
				Me._TITLE = value
				Me.SendPropertyChanged("TITLE")
				Me.OnTITLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MACHINE_DEPENDENT", DbType:="VarChar(50)")>  _
	Public Property MACHINE_DEPENDENT() As String
		Get
			Return Me._MACHINE_DEPENDENT
		End Get
		Set
			If (String.Equals(Me._MACHINE_DEPENDENT, value) = false) Then
				Me.OnMACHINE_DEPENDENTChanging(value)
				Me.SendPropertyChanging
				Me._MACHINE_DEPENDENT = value
				Me.SendPropertyChanged("MACHINE_DEPENDENT")
				Me.OnMACHINE_DEPENDENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblTRAINER_QUALIFICATIONS")>  _
Partial Public Class tblTRAINER_QUALIFICATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EMPLOYEE_ID As Integer
	
	Private _MASTER_JOB_NUMBER As Integer
	
	Private _JOB_TITLE_NUMBER As Integer
	
	Private _MACHINE_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanged()
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnMASTER_JOB_NUMBERChanged()
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanging(value As Integer)
    End Sub
    Partial Private Sub OnJOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnMACHINE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnMACHINE_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMPLOYEE_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EMPLOYEE_ID() As Integer
		Get
			Return Me._EMPLOYEE_ID
		End Get
		Set
			If ((Me._EMPLOYEE_ID = value)  _
						= false) Then
				Me.OnEMPLOYEE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EMPLOYEE_ID = value
				Me.SendPropertyChanged("EMPLOYEE_ID")
				Me.OnEMPLOYEE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASTER_JOB_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MASTER_JOB_NUMBER() As Integer
		Get
			Return Me._MASTER_JOB_NUMBER
		End Get
		Set
			If ((Me._MASTER_JOB_NUMBER = value)  _
						= false) Then
				Me.OnMASTER_JOB_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MASTER_JOB_NUMBER = value
				Me.SendPropertyChanged("MASTER_JOB_NUMBER")
				Me.OnMASTER_JOB_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TITLE_NUMBER", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JOB_TITLE_NUMBER() As Integer
		Get
			Return Me._JOB_TITLE_NUMBER
		End Get
		Set
			If ((Me._JOB_TITLE_NUMBER = value)  _
						= false) Then
				Me.OnJOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("JOB_TITLE_NUMBER")
				Me.OnJOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MACHINE_CODE", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MACHINE_CODE() As String
		Get
			Return Me._MACHINE_CODE
		End Get
		Set
			If (String.Equals(Me._MACHINE_CODE, value) = false) Then
				Me.OnMACHINE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._MACHINE_CODE = value
				Me.SendPropertyChanged("MACHINE_CODE")
				Me.OnMACHINE_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblEMPLOYEES")>  _
Partial Public Class tblEMPLOYEE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EMPLOYEE_ID As Integer
	
	Private _FIRST_NAME As String
	
	Private _LAST_NAME As String
	
	Private _EMPLOYEE_NUMBER As String
	
	Private _DEFAULT_JOB_TITLE_NUMBER As System.Nullable(Of Integer)
	
	Private _DEFAULT_MACHINE_CODE As String
	
	Private _TRAINER As String
	
	Private _PASSWORD As String
	
	Private _ACTIVE_STATUS As String
	
	Private _COMMENTS As String
	
	Private _IS_SUPERVISOR As String
	
	Private _SUPERVISOR_PASSWORD As String
	
	Private _EMAIL As String
	
	Private _SUPERVISOR_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEMPLOYEE_IDChanged()
    End Sub
    Partial Private Sub OnFIRST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFIRST_NAMEChanged()
    End Sub
    Partial Private Sub OnLAST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAST_NAMEChanged()
    End Sub
    Partial Private Sub OnEMPLOYEE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnEMPLOYEE_NUMBERChanged()
    End Sub
    Partial Private Sub OnDEFAULT_JOB_TITLE_NUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEFAULT_JOB_TITLE_NUMBERChanged()
    End Sub
    Partial Private Sub OnDEFAULT_MACHINE_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDEFAULT_MACHINE_CODEChanged()
    End Sub
    Partial Private Sub OnTRAINERChanging(value As String)
    End Sub
    Partial Private Sub OnTRAINERChanged()
    End Sub
    Partial Private Sub OnPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnPASSWORDChanged()
    End Sub
    Partial Private Sub OnACTIVE_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnACTIVE_STATUSChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnIS_SUPERVISORChanging(value As String)
    End Sub
    Partial Private Sub OnIS_SUPERVISORChanged()
    End Sub
    Partial Private Sub OnSUPERVISOR_PASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnSUPERVISOR_PASSWORDChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnSUPERVISOR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUPERVISOR_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMPLOYEE_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EMPLOYEE_ID() As Integer
		Get
			Return Me._EMPLOYEE_ID
		End Get
		Set
			If ((Me._EMPLOYEE_ID = value)  _
						= false) Then
				Me.OnEMPLOYEE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EMPLOYEE_ID = value
				Me.SendPropertyChanged("EMPLOYEE_ID")
				Me.OnEMPLOYEE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_NAME", DbType:="VarChar(50)")>  _
	Public Property FIRST_NAME() As String
		Get
			Return Me._FIRST_NAME
		End Get
		Set
			If (String.Equals(Me._FIRST_NAME, value) = false) Then
				Me.OnFIRST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_NAME = value
				Me.SendPropertyChanged("FIRST_NAME")
				Me.OnFIRST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_NAME", DbType:="VarChar(50)")>  _
	Public Property LAST_NAME() As String
		Get
			Return Me._LAST_NAME
		End Get
		Set
			If (String.Equals(Me._LAST_NAME, value) = false) Then
				Me.OnLAST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_NAME = value
				Me.SendPropertyChanged("LAST_NAME")
				Me.OnLAST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMPLOYEE_NUMBER", DbType:="VarChar(50)")>  _
	Public Property EMPLOYEE_NUMBER() As String
		Get
			Return Me._EMPLOYEE_NUMBER
		End Get
		Set
			If (String.Equals(Me._EMPLOYEE_NUMBER, value) = false) Then
				Me.OnEMPLOYEE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._EMPLOYEE_NUMBER = value
				Me.SendPropertyChanged("EMPLOYEE_NUMBER")
				Me.OnEMPLOYEE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEFAULT_JOB_TITLE_NUMBER", DbType:="Int")>  _
	Public Property DEFAULT_JOB_TITLE_NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._DEFAULT_JOB_TITLE_NUMBER
		End Get
		Set
			If (Me._DEFAULT_JOB_TITLE_NUMBER.Equals(value) = false) Then
				Me.OnDEFAULT_JOB_TITLE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._DEFAULT_JOB_TITLE_NUMBER = value
				Me.SendPropertyChanged("DEFAULT_JOB_TITLE_NUMBER")
				Me.OnDEFAULT_JOB_TITLE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEFAULT_MACHINE_CODE", DbType:="VarChar(50)")>  _
	Public Property DEFAULT_MACHINE_CODE() As String
		Get
			Return Me._DEFAULT_MACHINE_CODE
		End Get
		Set
			If (String.Equals(Me._DEFAULT_MACHINE_CODE, value) = false) Then
				Me.OnDEFAULT_MACHINE_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DEFAULT_MACHINE_CODE = value
				Me.SendPropertyChanged("DEFAULT_MACHINE_CODE")
				Me.OnDEFAULT_MACHINE_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRAINER", DbType:="VarChar(50)")>  _
	Public Property TRAINER() As String
		Get
			Return Me._TRAINER
		End Get
		Set
			If (String.Equals(Me._TRAINER, value) = false) Then
				Me.OnTRAINERChanging(value)
				Me.SendPropertyChanging
				Me._TRAINER = value
				Me.SendPropertyChanged("TRAINER")
				Me.OnTRAINERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PASSWORD", DbType:="VarChar(50)")>  _
	Public Property PASSWORD() As String
		Get
			Return Me._PASSWORD
		End Get
		Set
			If (String.Equals(Me._PASSWORD, value) = false) Then
				Me.OnPASSWORDChanging(value)
				Me.SendPropertyChanging
				Me._PASSWORD = value
				Me.SendPropertyChanged("PASSWORD")
				Me.OnPASSWORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE_STATUS", DbType:="VarChar(50)")>  _
	Public Property ACTIVE_STATUS() As String
		Get
			Return Me._ACTIVE_STATUS
		End Get
		Set
			If (String.Equals(Me._ACTIVE_STATUS, value) = false) Then
				Me.OnACTIVE_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE_STATUS = value
				Me.SendPropertyChanged("ACTIVE_STATUS")
				Me.OnACTIVE_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property COMMENTS() As String
		Get
			Return Me._COMMENTS
		End Get
		Set
			If (String.Equals(Me._COMMENTS, value) = false) Then
				Me.OnCOMMENTSChanging(value)
				Me.SendPropertyChanging
				Me._COMMENTS = value
				Me.SendPropertyChanged("COMMENTS")
				Me.OnCOMMENTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_SUPERVISOR", DbType:="VarChar(50)")>  _
	Public Property IS_SUPERVISOR() As String
		Get
			Return Me._IS_SUPERVISOR
		End Get
		Set
			If (String.Equals(Me._IS_SUPERVISOR, value) = false) Then
				Me.OnIS_SUPERVISORChanging(value)
				Me.SendPropertyChanging
				Me._IS_SUPERVISOR = value
				Me.SendPropertyChanged("IS_SUPERVISOR")
				Me.OnIS_SUPERVISORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPERVISOR_PASSWORD", DbType:="VarChar(50)")>  _
	Public Property SUPERVISOR_PASSWORD() As String
		Get
			Return Me._SUPERVISOR_PASSWORD
		End Get
		Set
			If (String.Equals(Me._SUPERVISOR_PASSWORD, value) = false) Then
				Me.OnSUPERVISOR_PASSWORDChanging(value)
				Me.SendPropertyChanging
				Me._SUPERVISOR_PASSWORD = value
				Me.SendPropertyChanged("SUPERVISOR_PASSWORD")
				Me.OnSUPERVISOR_PASSWORDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="VarChar(50)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPERVISOR_ID", DbType:="Int")>  _
	Public Property SUPERVISOR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SUPERVISOR_ID
		End Get
		Set
			If (Me._SUPERVISOR_ID.Equals(value) = false) Then
				Me.OnSUPERVISOR_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUPERVISOR_ID = value
				Me.SendPropertyChanged("SUPERVISOR_ID")
				Me.OnSUPERVISOR_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
